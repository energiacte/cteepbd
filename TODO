# TODO

- check whether `#[non_exhaustive]` could be useful for some enums (Service?)
- maybe bug: see why emissions for ACS for the manual's example change
  depending on whether nearby factors are used or not.

- cte

  - Test XML output
  - remove obsolete `acsnrb` option (fraccion_renovable_acs is unconditionally computed and added to JSON)
  - wfactors.normalize(defaults): ver si quitamos de aquí los valores por defecto y así podemos generar de forma más ergonómica los factores de paso sin usar wfactors_from_loc
    `CTE_LOCWF_RITE2014.get(loc)?.set_user_wfactors(&user_wf).normalize(&default_user_wf);`
  - Sacar energía final no EPB (ver acs_demanda_ren_con_nepb.csv comentando y descomentando NEPB)
  - Debemos cambiar la definición de servicios EPB dependiendo de si es residencial o no?
    o documentar que no se introducen los no EPB como tales cuando corresponda (p.e. iluminación en residencial) (Poner en manual como nota)

- epbd:
  - Renombrar GenCrIn a CrIn, GenProd a Prod, GenAux a Aux, y GenOut a Out, y gen\_ -> element\_
  - Diferenciar vectores renovables: SOL, PV y ENV y electricidad cogenerada ECGN  (ver hoja de ejemplo ISO_DIS_52000-1_SS_2015_05_13.xlsm)?
    - Nos permite priorizar consumos eléctricos según origen
    - Ver qué queremos...
  - Renombrar a cdata a energia o a data?
  - Datos de ZONA completar con EN 52000-1, 12.1 informe
  - Datos de SISTEMA
    - Eficiencias de sistemas (no las calculamos sino que son datos)
    - Ver para qué sistemas (cal, ref, acs, ven?, ??)
    - SISTEMA, GEN, id, COP, EER, COP_dhw, SCOP, SEER, SCOP_dhw, SPF_h, SPF_c, SPF_dhw, comentario
    - SISTEMA, NGEN (DIS + EM), id, ???
  - define GEN as a new (nonEPB) service for energy used for cogeneration (see Module M11 in EN 15316)
    - how does it relate to EPB and NEPB services? (where is it accounted for? review filtering in code)
    - Used to attribute carrier use to electricity cogeneration. Check impact in all other computations (could be used to find cogeneration factors).
    - Describe default method to find used energy from electrical efficiency of cogeneration.
  - Define more component types:
    - Non recoverable losses linked to service X and subsystem Y (Q_X_Y_nrvd)
      - PERDIDAS_NOREC
      - Q_X_Y_nrvd = Q_X_ls - Q_X_Y_ls_rvd
      - Energy losses linked to service X (Q_X_ls)
        - PERDIDAS
      - Recovered energy losses linked to service X and subsystem Y (Q_X_Y_ls_rvd)
        - RECUPERADA
  - allow using load matching factor values (or functions) that are not 1 (formula 32, B.32)
    Have a look to the proposed value from the TR.
  - Review JSON output naming
  - JSON input

- tests:

  - cte: check non matching computation modes in component metadata and weighting factors metadata

- output:
  - Additional JSON output generated from the zone (ZONA) and system (SISTEMA) data
    - Energy needs (with annual totals)
    - System efficiencies / indicators
      - See UNE_EN 15316-1 formula (35). Varies by subsystem type
      - ¿Whole building efficiencies by service (non renewable primary energy)?
    - Fraction of energy use covered by renewable sources, by service and by system (id)
      - Calcular % de cobertura renovable (RER_nrb, RER_dst) (consumo EF y demanda) para los distintos servicios
    - ReduccionEPNR y ReduccionEmisiones
    - demanda por servicios y total (¿y demanda de referencia si la hay?)
    - valores totales de los distintos indicadores (Ver BalanceEPB nuevo y ver 52000-1 Tabla 5 para datos por servicio)
    - e.final
      - De todos los servicios y desglosado por servicio
    - balance B, balance A, AB: ren, nren, tot, emisiones.
      - De todos los servicios y desglosado por servicio
    - emisiones, desglose eléctrico y no eléctrico
    - Calcular ReduccionEPNR y ReduccionEmisiones por uso de renovables
  - Split XML output, generated from JSON results

## Wishlist

- use templates for output (plain, detailed, ...) depending on cli parameter
