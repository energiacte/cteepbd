# TODO

- check if the `#[non_exhaustive]` attribute can be useful in some enums
- maybe bug: see why emissions for ACS for the manual's example change
  depending on whether nearby factors are used or not.
- Aclarar la definición de cogeneración (imputación de combustible a uso cogeneración con destino/servicio COGEN). Ver impacto en resto de cálculos.

- cte

  - wfactors.normalize(defaults): ver si quitamos de aquí los valores por defecto y así podemos generar de forma más ergonómica los factores de paso sin usar wfactors_from_loc

  `CTE_LOCWF_RITE2014.get(loc)?.set_user_wfactors(&user_wf).normalize(&default_user_wf);`

- epbd:

  - allow using load matching factor values (or functions) that are not 1 (formula 32, B.32)
    Have a look to the proposed value from the TR.
  - allow to assign produced energy to services (instead of generic imputation).
    This has an effect on the computation of the share of produced energy, which should proceed after discounting the produced energy to specific services.

- tests:
  - cte: check non matching computation modes in component metadata and weighting factors metadata

- output:
  - Additional JSON output generated from the zone (ZONA) and system (SISTEMA) data
    - Energy needs (with annual totals)
    - System (by_id) efficiencies / indicators
    - ¿Whole building efficiencies by service (non renewable primary energy)?
    - Fraction of energy use covered by renewable sources, by service and by system (id)
    - ReduccionEPNR y ReduccionEmisiones
    - demanda por servicios y total (¿y demanda de referencia si la hay?)
    - valores totales de los distintos indicadores (Ver BalanceEPB nuevo)
    - e.final
      - De todos los servicios y desglosado por servicio
    - balance B, balance A, AB: ren, nren, tot, emisiones.
      - De todos los servicios y desglosado por servicio
    - emisiones, desglose eléctrico y no eléctrico
    - Calcular % de cobertura renovable (consumo EF y demanda) para los distintos servicios
    - Calcular ReduccionEPNR y ReduccionEmisiones por uso de renovables
  - Split XML output, generated from JSON results

## Wishlist

- use templates for output (plain, detailed, ...) depending on cli parameter
